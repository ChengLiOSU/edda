#make print in python 2, 3 compatible
from __future__ import print_function 
import numpy as np
import pyedda as edda

#Distribution modeler
dm = edda.DistributionModeler(2)
dummy_data = np.random.rand(100)
dm.computeGMM(dummy_data,2,0)
dm.computeHistogram(dummy_data,32,1)
dm.printDistr()
r1,r2,r3,r4 = dm.getDistr(1)
print (r1)
print (r2)
print (r3)
print (r4)
print()

#Univariate histogram
print("//////////Univariate Histogram///////")
dummy_data = np.random.rand(100)
hist = edda.Histogram(dummy_data, 10)
print ("hist.getMean():", hist.getMean())
histCopy = edda.Histogram(hist)
print("histCopy.getMean():", histCopy.getMean())
print("hist.getVar():", hist.getVar())
print("hist.getPdf(0.5):",hist.getPdf(0.5))
print("hist.getCdf(1.0):",hist.getCdf(1.0))
print("hist.getSample():", hist.getSample())
print("Output histogram:")
hist.output()
print("hist.getBins():", hist.getBins())
print("hist.getMaxValue():", hist.getMaxValue())
print("hist.getMinValue():", hist.getMinValue())
print("hist.getBinValue(3):", hist.getBinValue(3))
print()

#Univariate Gaussian
print("//////////Univariate Gaussian///////")
dummy_data = np.random.rand(100)
gaussian = edda.Gaussian(100, 20)
print("gaussian.getMean():", gaussian.getMean())
print("gaussian.getVar():", gaussian.getVar())
print("gaussian.getPdf(105):", gaussian.getPdf(105))
print("gaussian.getSample():", gaussian.getSample())
print("gaussian.getCdf(105):", gaussian.getCdf(105))
print("gaussian.getCdfPrecise():", gaussian.getCdfPrecise(105))
print("Output gaussian:")
gaussian.output()
print()

#Univariate GMM
print("//////////Univariate GMM///////")
gmm = edda.GMM(4)
models = np.array([[0.2, 10, 2],[0.5, 15, 4],[0.1, 8, 7],[0.2,6, 9]])
gmm = edda.GMM(models)
print("gmm.getNumComponents():", gmm.getNumComponents() )
print("gmm.getMean():", gmm.getMean())
print("gmm.getVar():", gmm.getVar())
print("gmm.getPdf(10):", gmm.getPdf(10))
print("gmm.getSample():", gmm.getSample())
print("gaussian.getCdf(10):", gmm.getCdf(10))
print("Output GMM:")
gmm.output()
print("Model and output a gmm by trainig samples:")
dummy_data = np.random.rand(100)
modelGmm = edda.GMM(dummy_data,3)
modelGmm.output()
print()
